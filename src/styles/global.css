@charset "utf-8";

/* CSS Resets */

*,
*::before,
*::after {
  box-sizing: border-box;
}

* {
  margin: 0;
}

html,
body {
  height: 100%;
}

body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}

img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}

input,
button,
textarea,
select {
  font: inherit;
}

p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

/* STYLES */

:root {
  --MORNING_HUE: 60;
  --AFTERNOON_HUE: 360;
  --NIGHT_HUE: 225;

  --HUE: var(--NIGHT_HUE);

  --COLOR_TEXT: #41414d;
  --COLOR_PRIMARY: hsl(var(--HUE), 47%, 47%);
  --COLOR_SECONDARY: hsl(var(--HUE), 64%, 19%);
  --COLOR_GRAY-100: hsl(var(--HUE), 14%, 97%);
  --COLOR_GRAY-300: hsl(var(--HUE), 38%, 90%);
  --COLOR_GRAY-500: hsl(var(--HUE), 28%, 70%);
}

body {
  color: var(--COLOR_TEXT);
  background-color: var(--COLOR_GRAY-300);
  padding: 0 16px;
  font-family: Verdana, Geneva, Tahoma, sans-serif;
  position: relative;
}

.app {
  height: 100%;
  display: flex;
  flex-direction: column;
}

header {
  display: flex;
  align-items: center;
  padding: 16px 0;
  color: var(--COLOR_SECONDARY);
}

.temperature-fieldset {
  margin-left: auto;
  border: none;
  text-align: center;
  font-size: 1.25rem;

  .temperature-control {
    display: flex;
    border-radius: 100vmax;
    overflow: hidden;

    .form-control {
      height: 44px;
      width: 55px;

      label,
      input {
        position: absolute;
        inset: 0;
        height: 100%;
        width: 100%;
        cursor: pointer;
      }

      label {
        display: grid;
        place-content: center;
        user-select: none;
        font-weight: bold;
        border: 1px solid var(--COLOR_SECONDARY);
        transition:
          background-color 200ms ease-in-out,
          color 200ms ease-in-out;
      }

      &:first-of-type label {
        border-radius: 100vmax 0 0 100vmax;
      }

      &:last-of-type label {
        border-radius: 0 100vmax 100vmax 0;
      }

      input {
        display: none;
      }

      input:checked + label {
        color: var(--COLOR_GRAY-100);
        background-color: var(--COLOR_SECONDARY);
      }
    }
  }
}

main {
  flex: 1;
  display: flex;
  flex-direction: column;

  .location-form {
    width: fit-content;
    margin: auto;
    padding: 16px 0;

    .form-control {
      display: flex;
      flex-direction: column;
      text-align: center;
      font-size: 1.25rem;

      .input-wrapper {
        border: 2px solid var(--COLOR_SECONDARY);
        border-radius: 12px;
        overflow: hidden;

        input {
          padding: 16px 16px 8px;
          border-radius: 12px 12px 0 0;
          border: none;
        }

        .debounce-bar {
          --time: 1500ms;
          height: 8px;
          position: relative;

          &::after {
            content: '';
            position: absolute;
            inset: 0;
            height: 100%;
            width: 100%;
            background-color: var(--COLOR_SECONDARY);
            transform-origin: left center;
            transform: scaleX(1);
            transition: transform var(--time) ease-out;
          }
        }
      }
    }
  }

  .weather-info {
    flex: 1;
    display: grid;
    grid-template-columns: 1fr 250px;
    grid-template-rows: 1fr 200px;
    grid-template-areas:
      'summary additional'
      'daily-forecasts daily-forecasts';

    .summary {
      grid-area: summary;

      .condition {
        font-size: 2.5rem;
      }

      .location {
        font-size: 1.35rem;
      }

      .datetime {
        display: flex;
        flex-direction: column;
        line-height: 1;
      }

      .temperature-scale-wrapper {
        font-size: 4rem;
      }
    }

    .additional {
      grid-area: additional;
      display: grid;
      grid-auto-columns: max-content;
      grid-auto-rows: min-content;
      justify-content: end;
      gap: 8px;
    }

    .daily-forecasts {
      grid-area: daily-forecasts;
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
      gap: 8px;

      .forecast {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 8px;
        border: 2px solid var(--COLOR_PRIMARY);
        border-radius: 8px;
        padding: 8px;

        h6 {
          font-size: 1rem;
        }

        .temperatures {
          text-align: center;

          .high {
            font-size: 2rem;
            font-weight: bold;
            line-height: 1.25;
          }

          .low {
            font-size: 0.75rem;
            line-height: 1;
          }
        }

        .icon {
          margin: auto;
        }
      }
    }

    padding: 8px 0;
  }
}

.additional-info {
  display: flex;
  gap: 8px;
  width: fit-content;

  span {
    font-size: 1.5rem;
  }
}

.form-control {
  position: relative;

  input {
    background-color: var(--COLOR_GRAY-100);
  }
}

.max-width {
  max-width: 56rem;
  margin: auto;
}

.icon {
  width: 2rem;
  fill: var(--COLOR_PRIMARY);

  &.sm {
    width: 1.5rem;
  }

  &.lg {
    width: 3rem;
  }

  &.xl {
    width: 6rem;
  }
}

.temperature-scale-wrapper {
  position: relative;
  overflow: hidden;

  .celsius,
  .fahrenheit {
    transition: transform 250ms ease-in-out;
  }

  .celsius {
    display: block;
  }

  .fahrenheit {
    position: absolute;
    inset: 0;
    transform: translateY(100%);
  }
}

.temperature-scale-wrapper.show-f {
  .celsius {
    transform: translateY(-100%);
  }

  .fahrenheit {
    transform: translateY(0%);
  }
}

.spinner {
  position: absolute;
  height: 90px;
  width: 90px;
  inset: 0;
  margin: auto;

  &::before {
    content: '';
    position: absolute;
    height: 100%;
    width: 100%;
    inset: 0;
    border-radius: 50%;
    border: 6px solid var(--COLOR_GRAY-500);
    border-block-start-color: var(--COLOR_PRIMARY);
    animation: spinner 850ms infinite ease-in-out forwards;
  }

  pointer-events: none;
  transform: scale(2);
  opacity: 0;
  transition:
    transform 350ms ease-in,
    opacity 350ms ease-in;
}

.spinner.visible {
  transform: scale(1);
  opacity: 1;
  transition-duration: 200ms;
  transition-timing-function: ease-out;
}

@keyframes spinner {
  from {
    transform: rotate(0turn);
  }
  to {
    transform: rotate(1turn);
  }
}
